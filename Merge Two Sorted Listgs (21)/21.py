# Runtime: 48 ms# Beats 73.09% of Python submissions# Definition for singly-linked list.# class ListNode:#     def __init__(self, x):#         self.val = x#         self.next = Noneclass Solution:    def mergeTwoLists(self, l1, l2):        """        :type l1: ListNode        :type l2: ListNode        :rtype: ListNode        """        new_lst = ListNode(0)        new_lst_backup = new_lst        while l1 or l2:            if l1 and l2:                if l1.val <= l2.val:                    new_lst.next = ListNode(l1.val)                    new_lst = new_lst.next                    l1 = l1.next                else:                    new_lst.next = ListNode(l2.val)                    new_lst = new_lst.next                    l2 = l2.next            elif l1 and not l2:                new_lst.next = l1                break            elif l2 and not l1:                new_lst.next = l2                break        return new_lst_backup.next        